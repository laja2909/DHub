on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  run_pull:
    name: run pull
    runs-on: ubuntu-latest
    
    steps:
    - name: get runner ip
      run: |
        RUNNER_IP=$(curl -s https://api.ipify.org)
        echo "RUNNER_IP=$RUNNER_IP" >> $GITHUB_ENV

    - name: Get runner IP in CIDR format
      id: get_cidr
      run: |
        CIDR="${RUNNER_IP}/32"
        echo "CIDR=$CIDR" >> $GITHUB_ENV
        
    - name: create new firewall resource to hetzner server
      id: create_firewall
      run: |
        curl \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.HETZ_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"name":"tmp_config","labels":{"key":"value"},"rules":[{"description":"Allow ssh","direction":"in","source_ips":["'$CIDR'"],"protocol":"tcp","port":"22"}],"apply_to":[{"type":"server","server":{"id":61974562}}]}' \
          'https://api.hetzner.cloud/v1/firewalls'
          
    - name: install ssh keys
      # check this thread to understand why its needed:
      # https://stackoverflow.com/a/70447517
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        
    #- name: connect and pull
      #run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && git checkout ${{ secrets.MAIN_BRANCH }} && git pull && exit"

    - name: get firewall resource hetzner id
      if: steps.create_firewall.outcome == 'success'
      run: |
        FIREWALL_ID=$(curl \
        -H "Authorization: Bearer ${{ secrets.HETZ_TOKEN }}" \
        'https://api.hetzner.cloud/v1/firewalls?name="tmp_config"')
        echo "$FIREWALL_ID"

      
    - name: cleanup
      run: rm -rf ~/.ssh
